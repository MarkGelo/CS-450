Only in lab-4: bio.d
Only in lab-4: bio.o
Only in lab-4: bootasm.d
Only in lab-4: bootasm.o
Only in lab-4: bootblock
Only in lab-4: bootblock.asm
Only in lab-4: bootblock.o
Only in lab-4: bootblockother.o
Only in lab-4: bootmain.d
Only in lab-4: bootmain.o
Only in lab-4: _cat
Only in lab-4: cat.asm
Only in lab-4: cat.d
Only in lab-4: cat.o
Only in lab-4: cat.sym
Only in lab-4: console.d
Only in lab-4: console.o
Only in lab-4: _echo
Only in lab-4: echo.asm
Only in lab-4: echo.d
Only in lab-4: echo.o
Only in lab-4: echo.sym
Only in lab-4: entry.o
Only in lab-4: entryother
Only in lab-4: entryother.asm
Only in lab-4: entryother.d
Only in lab-4: entryother.o
diff -r lab-4/exec.c xv6-original/exec.c
65d64
<   // lab 4
67,69c66
<   // pg 12 of pp
<   sp = KERNBASE - 1; 
<   if((allocuvm(pgdir, PGROUNDDOWN(sp), sp)) == 0) // sz no longer here, pg 5 -> pg 12
---
>   if((sz = allocuvm(pgdir, sz, sz + 2*PGSIZE)) == 0)
71,72c68,69
<   clearpteu(pgdir, (char*)(sp - 2*PGSIZE)); // page guard, need 2?
<   //sp = sz;
---
>   clearpteu(pgdir, (char*)(sz - 2*PGSIZE));
>   sp = sz;
105d101
<   curproc -> pages = 1; // keep track of # user stack pages
Only in lab-4: exec.d
Only in lab-4: exec.o
Only in lab-4: file.d
Only in lab-4: file.o
Only in lab-4: _forktest
Only in lab-4: forktest.asm
Only in lab-4: forktest.d
Only in lab-4: forktest.o
Only in lab-4: fs.d
Only in lab-4: fs.img
Only in lab-4: fs.o
Only in lab-4: _grep
Only in lab-4: grep.asm
Only in lab-4: grep.d
Only in lab-4: grep.o
Only in lab-4: grep.sym
Only in lab-4: ide.d
Only in lab-4: ide.o
Only in lab-4: _init
Only in lab-4: init.asm
Only in lab-4: initcode
Only in lab-4: initcode.asm
Only in lab-4: initcode.d
Only in lab-4: initcode.o
Only in lab-4: initcode.out
Only in lab-4: init.d
Only in lab-4: init.o
Only in lab-4: init.sym
Only in lab-4: ioapic.d
Only in lab-4: ioapic.o
Only in lab-4: kalloc.d
Only in lab-4: kalloc.o
Only in lab-4: kbd.d
Only in lab-4: kbd.o
Only in lab-4: kernel
Only in lab-4: kernel.asm
Only in lab-4: kernel.sym
Only in lab-4: _kill
Only in lab-4: kill.asm
Only in lab-4: kill.d
Only in lab-4: kill.o
Only in lab-4: kill.sym
Only in lab-4: lapic.d
Only in lab-4: lapic.o
Only in lab-4: _ln
Only in lab-4: ln.asm
Only in lab-4: ln.d
Only in lab-4: ln.o
Only in lab-4: ln.sym
Only in lab-4: log.d
Only in lab-4: log.o
Only in lab-4: _ls
Only in lab-4: ls.asm
Only in lab-4: ls.d
Only in lab-4: ls.o
Only in lab-4: ls.sym
Only in lab-4: main.d
Only in lab-4: main.o
diff -r lab-4/Makefile xv6-original/Makefile
184,185d183
< 	_test\
< 	_test1\
Only in lab-4: _mkdir
Only in lab-4: mkdir.asm
Only in lab-4: mkdir.d
Only in lab-4: mkdir.o
Only in lab-4: mkdir.sym
Only in lab-4: mkfs
Only in lab-4: mp.d
Only in lab-4: mp.o
Only in lab-4: picirq.d
Only in lab-4: picirq.o
Only in lab-4: pipe.d
Only in lab-4: pipe.o
Only in lab-4: printf.d
Only in lab-4: printf.o
Only in lab-4: proc.d
diff -r lab-4/proc.h xv6-original/proc.h
52d51
<   int pages;                   // lab 4 to keep track of pages
Only in lab-4: proc.o
Only in lab-4: _rm
Only in lab-4: rm.asm
Only in lab-4: rm.d
Only in lab-4: rm.o
Only in lab-4: rm.sym
Only in lab-4: _sh
Only in lab-4: sh.asm
Only in lab-4: sh.d
Only in lab-4: sh.o
Only in lab-4: sh.sym
Only in lab-4: sleeplock.d
Only in lab-4: sleeplock.o
Only in lab-4: spinlock.d
Only in lab-4: spinlock.o
Only in lab-4: _stressfs
Only in lab-4: stressfs.asm
Only in lab-4: stressfs.d
Only in lab-4: stressfs.o
Only in lab-4: stressfs.sym
Only in lab-4: string.d
Only in lab-4: string.o
Only in lab-4: swtch.o
diff -r lab-4/syscall.c xv6-original/syscall.c
20,22c20,22
<   //struct proc *curproc = myproc();
<   // new boundary is top of user stack which would be kernbase or kernbase - 1??
<   if(addr >= KERNBASE - 1 || addr+4 > KERNBASE - 1)
---
>   struct proc *curproc = myproc();
> 
>   if(addr >= curproc->sz || addr+4 > curproc->sz)
35c35
<   //struct proc *curproc = myproc();
---
>   struct proc *curproc = myproc();
37c37
<   if(addr >= KERNBASE - 1)
---
>   if(addr >= curproc->sz)
40c40
<   ep = (char*)(KERNBASE - 1);
---
>   ep = (char*)curproc->sz;
62c62
<   //struct proc *curproc = myproc();
---
>   struct proc *curproc = myproc();
66c66
<   if(size < 0 || (uint)i >= KERNBASE - 1 || (uint)i+size > KERNBASE - 1)
---
>   if(size < 0 || (uint)i >= curproc->sz || (uint)i+size > curproc->sz)
Only in lab-4: syscall.d
Only in lab-4: syscall.o
Only in lab-4: sysfile.d
Only in lab-4: sysfile.o
Only in lab-4: sysproc.d
Only in lab-4: sysproc.o
Only in lab-4: _test
Only in lab-4: _test1
Only in lab-4: test1.asm
Only in lab-4: test1.c
Only in lab-4: test1.d
Only in lab-4: test1.o
Only in lab-4: test1.sym
Only in lab-4: test.asm
Only in lab-4: test.c
Only in lab-4: test.d
Only in lab-4: test.o
Only in lab-4: test.sym
Only in lab-4: trapasm.o
diff -r lab-4/trap.c xv6-original/trap.c
80,92c80
<   // error - a label can only be a part of a statement and ...
<   case T_PGFLT: {
<     // check what address caused it and allocate new page ONLY if bad address is from the page right below stack
<     uint addr_ = rcr2();
<     struct proc *curproc = myproc();
<     if(allocuvm(curproc -> pgdir, PGROUNDDOWN(addr_), PGROUNDDOWN(addr_) + PGSIZE) == 0){
<       exit();
<     }
<     //clearpteu(curproc -> pgdir, (char*)((KERNBASE - 1 - curproc -> pages * PGSIZE) - PGSIZE));
<     curproc -> pages = curproc -> pages + 1;
<     cprintf("increased stack size\n");
<     
<     break; } // need brackets - stackoverflow.com/questions/27006986/what-is-wrong-with-my-switch-statement
---
> 
Only in lab-4: trap.d
Only in lab-4: trap.o
Only in lab-4: uart.d
Only in lab-4: uart.o
Only in lab-4: ulib.d
Only in lab-4: ulib.o
Only in lab-4: umalloc.d
Only in lab-4: umalloc.o
Only in lab-4: _usertests
Only in lab-4: usertests.asm
Only in lab-4: usertests.d
Only in lab-4: usertests.o
Only in lab-4: usertests.sym
Only in lab-4: usys.o
Only in lab-4: vectors.o
Only in lab-4: vectors.S
diff -r lab-4/vm.c xv6-original/vm.c
325,342d324
< 
<   struct proc *curproc = myproc();
<   for(i = PGROUNDDOWN(KERNBASE -1); i > PGROUNDDOWN(KERNBASE - 1) - ((curproc->pages) * PGSIZE); i -= PGSIZE){ 
<   // instead of 0 to curproc -> sz, its kernbase to 0 followed by page guard
<     if((pte = walkpgdir(pgdir, (void *) i, 0)) == 0)
<       panic("copyuvm: pte should exist");
<     if(!(*pte & PTE_P))
<       panic("copyuvm: page not present");
<     pa = PTE_ADDR(*pte);
<     flags = PTE_FLAGS(*pte);
<     if((mem = kalloc()) == 0)
<       goto bad;
<     memmove(mem, (char*)P2V(pa), PGSIZE);
<     if(mappages(d, (void*)i, PGSIZE, V2P(mem), flags) < 0) {
<       kfree(mem);
<       goto bad;
<     }
<   }
Only in lab-4: vm.d
Only in lab-4: vm.o
Only in lab-4: _wc
Only in lab-4: wc.asm
Only in lab-4: wc.d
Only in lab-4: wc.o
Only in lab-4: wc.sym
Only in lab-4: xv6.img
Only in lab-4: _zombie
Only in lab-4: zombie.asm
Only in lab-4: zombie.d
Only in lab-4: zombie.o
Only in lab-4: zombie.sym
